对软件设计中普遍存在(反复出现的各种问题) 所提出的解决方案
每一个设计模式系统的命名 解释和评价了面向对象系统中一个重要的和重复出现的设计
面向对象的过程是
    封装->继承->多态 是递进的关系 不是并列的关系  先封装 再继承 最后才多态
    python本身就是一门多态的语言(最好的体现就是鸭子类型)
接口:
    若干抽象方法的集合
    限制实现接口的类必须按照接口给定的调用方式实现这些方法 对高层模块隐藏了类的内部实现
    或者翻译一下
        就是说你这个接口 必须要写这个类 怎么确保你要写这个类呢 继承父类
        父类的metaclass=ABCMeta 在必须要实现的方法上添加@abstractmethod 抽象方法 必须要实现

总结
    意思其实是说有很多重复的类 但是类里面的方法都一样 如果你不设计这个父类的抽象方法
    那么别人看你代码这些类 是不是得一个一个看 一个一个得看里面得方法 是不是浪费时间啊
    而且还有可能别人会乱写这些方法 具体得是说参数不一样
    所以说你用父类得抽象方法定义一下 子类必须按照规定的方法取实现啊 到时候只需要看抽象方法就可以了看里面是什么 怎么执行
    子类重写方法 函数名参数要一致
    这个父类里面用@abstractmethod装饰的方法其实就可以叫做一个接口

             
