SOLID原则
    开放封闭原则
        一个软件实体如类 模块和函数应该对扩展开放 对修改关闭 即软件实体应尽量在不修改原有代码的情况下进行扩展
    里氏替换原则
        所有引用父类的地方必须能透明使用其子类的对象
        传user不报错 传VIP用户也不报错
     依赖倒置元组
        高层模块不应该依赖底层模块 二者都应该依赖其抽象
        抽象不应该依赖细节 细节应该依赖抽象(先定义抽象就比如先定义方法 实现细节就是业务逻辑) 换言之要针对接口编程 而不是针对实现编程
        这个调用接口其实是看父类的那个抽象方法 看怎么调用他 可以直接 实例.pay 这个pay也是这个接口函数的名字啊
     接口隔离原则
        使用多个专门的接口 而不使用单一的总接口，即客户端不应该依赖于那些他不需要的接口
        这个的意思其实是说子类不是可以继承多个父类吗 我们只继承我们需要的父类 而每个父类又解决一个功能
        所以说我们用不上的功能 所对应的父类就不用继承
     单一职责原则
        不要存在多于一个导致类变更的原因 即一个类只负责一项职责