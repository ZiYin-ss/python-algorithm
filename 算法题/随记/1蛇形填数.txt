while(total<n*n){
	while(y+1 < n && !a[x][y+1])      //向右
		a[x][++y] = ++total;
	while(x+1 < n && !a[x+1][y])      //向下
		a[++x][y] = ++total;
	while(y-1 >= 0 && !a[x][y-1])     //向左
		a[x][--y] = ++total;
	while(x-1 >= 0 && !a[x-1][y])     //向上
		a[--x][y] = ++total;
}

为什么我要写下来呢 因为这个思想值得学习
	本来是环状的 先向右 那自然是一维不变二维变 所以y++
	while是限定条件 必须要小于n(列表从0开始) 边界限定
	第二个条件是前面那个数不存在才往前走	存在的话是不是就向下了
	依次类推 环形可以走完了
