# 罗马数字转整数
"""
    与第12到题很像 反转就是了
"""
"""
    解题思路就在于你能不能想到 后面一个大于前面一个这个规律
"""


class Solution:
    def romanToInt(self, s: str) -> int:
        d = {'M': 1000, 'D': 500, 'C': 100, 'L': 50, 'X': 10, 'V': 5, 'I': 1}
        m = 0
        for i in range(len(s)):
            if i > 0 and d[s[i]] > d[s[i - 1]]:
                # 穿插了一个找规律的思想 因为但凡d[s[i]] > d[s[i - 1]] 后面一个大于前面一个都要执行这一步
                m += d[s[i]] - 2 * d[s[i - 1]]  # 这个地方 因为一开始先加了一个c 原来加上的要减去 再减去c
            else:
                m += d[s[i]]
        return m


"""
    思想很巧妙 
    就是在于 假如CM C为100 M为900
        别管C先正常加上 当你发现后面一个大于前面一个就说明要减了 减两个就可以啊
    这样是可以正常转成整数的  假如先1000+100 + 1000-200 = 1900 是这个意思 不要觉得加不上了
    自己走一遍就不别扭了
"""

s = "MCMXCIV"
a = Solution()
print(a.romanToInt(s))
