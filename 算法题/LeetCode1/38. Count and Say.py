# 外观数列
"""
给定一个正整数 n ，输出外观数列的第 n 项。
「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。
你可以将其视作是由递归公式定义的数字字符串序列：
countAndSay(1) = "1"
countAndSay(n) 是对 countAndSay(n-1) 的描述，然后转换成另一个数字字符串。
前五项如下：
    1.     1
    2.     11
    3.     21
    4.     1211
    5.     111221
    第一项是数字 1
    描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 "11"
    描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 "21"
    描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 "1211"
    描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 "111221"
    要 描述 一个数字字符串，首先要将字符串分割为 最小 数量的组，每个组都由连续的最多 相同字符 组成。然后对于每个组，先描述字符的数量，然后描述字符，形成一个描述组。要将描述转换为数字字符串，先将每组中的字符数量用数字替换，再将所有描述组连接起来。
"""
"""
    这个解法就在于你能不能想的到 当一样的时候补退出循环 count+就可以了 不一样就退出下一个
    确实有点不好理解的 不要急啊
"""


class Solution:
    def countAndSay(self, n: int) -> str:
        seq = "1"
        for i in range(n - 1):  # 上一层的结果作为下一层的输入
            seq = self.getNext(seq)
        return seq

    def getNext(self, seq):
        i, next_seq = 0, ""
        while i < len(seq):
            count = 1
            while i < len(seq) - 1 and seq[i] == seq[i + 1]:
                # 这个为什么长度要减一呢 因为 长度为4 那么索引到3 但是后面3+1超界了
                # 所以说这样写
                count += 1
                i += 1
            next_seq += str(count) + seq[i]
            i += 1
        return next_seq


"""
    这个getNext函数估计过后看不懂的 但是把111223带进去走一遍你就知道说的 是什么意思呢 
    注意内层while不走了时候 i是2 还是指向1 得外面加一才可以继续 懂吗?    
"""
